name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'LICENSE.txt'
      - 'AUTHORS'
      - '*.nix'
      - 'example_project/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'LICENSE.txt'
      - 'AUTHORS'
      - '*.nix'
      - 'example_project/**'

jobs:
  gcc:
    name: ${{ matrix.version }} C++${{ matrix.cpp }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [gcc6, gcc9, gcc14]
        cpp: [11, 14, 17, 20]
        exclude:
          - version: gcc6
            cpp: 17
          - version: gcc6
            cpp: 20
          - version: gcc9
            cpp: 20
    steps:
      - uses: actions/checkout@v4
      - name: run
        run: |
          docker run --rm -v $(pwd):/home/src renatogarcia/icecream-ci:${{ matrix.version }} /bin/sh -c " \
          conan profile detect && \
          conan install ./src/tests -s compiler.cppstd=${{ matrix.cpp }} --output-folder=build --build=missing && \
          cmake /home/src -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release && \
          cmake --build . && \
          ctest -V"

  clang:
    name: ${{ matrix.version }} C++${{ matrix.cpp }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [clang8, clang18]
        cpp: [11, 14, 17, 20]
        exclude:
          - version: clang8
            cpp: 20
    steps:
      - uses: actions/checkout@v4
      - name: run
        run: |
          docker run --rm -v $(pwd):/home/src renatogarcia/icecream-ci:${{ matrix.version }} /bin/sh -c " \
          conan profile detect && \
          conan install ./src/tests -s compiler.cppstd=${{ matrix.cpp }} --output-folder=build --build=missing && \
          cmake /home/src -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release && \
          cmake --build . && \
          ctest -V"

  msvc:
    name: ${{ matrix.name }} C++${{ matrix.cpp }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-2019]
        cpp: [14, 17, 20]
        exclude:
          - os: windows-2019
            cpp: 20
        include:
          - os: windows-2022
            name: vs2022
          - os: windows-2019
            name: vs2019
    steps:
      - uses: actions/checkout@v4
      - name: Install Conan
        run: pip3 install conan --upgrade
      - name: build
        run: |
          conan profile detect
          conan install ./tests -s compiler.cppstd=${{ matrix.cpp }} --output-folder=conan --build=missing
          cmake . -DCMAKE_TOOLCHAIN_FILE="./conan/conan_toolchain.cmake" -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: run
        run: ctest -V -C Release

  xcode:
    name: Xcode C++${{ matrix.cpp }}
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        cpp: [11, 14, 17]
    env:
      CPP_STANDARD: ${{ matrix.cpp }}
    steps:
      - uses: actions/checkout@v4
      - name: prepare
        run: brew install conan
      - name: build
        run: |
          conan profile detect
          conan install ./tests -s compiler.cppstd=${{ matrix.cpp }} --output-folder=build --build=missing
          cmake . -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build .
      - name: run
        run: ctest -V
